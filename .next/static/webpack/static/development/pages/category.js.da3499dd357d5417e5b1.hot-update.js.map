{"version":3,"file":"static/webpack/static/development/pages/category.js.da3499dd357d5417e5b1.hot-update.js","sources":["webpack:///./pages/category.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Layout, Menu, Icon, Row, Col } from \"antd\";\nimport \"../styles.less\";\nimport AdminManageProfile from \"../components/admin/manageProfiles\";\nimport ManageEnquiries from \"../components/admin/manageEnquiries\";\nimport ManageContactForms from \"../components/admin/manageContactForms\";\nimport CategoryContent from \"../components/home/categoryContent\";\nimport ArtistList from \"../components/home/artistList\";\nimport Nav from \"../components/nav\";\nimport Router, { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport router from \"next/router\";\nimport axios from \"axios\";\nimport { HomeConsumer, HomeContext } from \"../components/provider/homeProvider\";\n\nimport Head from \"../components/home/head\";\nimport AddGeneral from \"./admin/addGeneral\";\nimport { ConfigConsumer } from \"antd/lib/config-provider\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass Category extends Component {\n  state = {\n    categories: [],\n    currentCategory: {},\n    location: \"\"\n  };\n  static contextType = HomeContext;\n\n  static getInitialProps = async context => {\n    let query = context.query.enquiry.split(\"-\");\n    let categories = await axios.get(\"/api/categories/allCategories/50/0\");\n\n    categories = await categories.data;\n    let category = await axios.get(\n      \"/api/categories/categoryBySlug/\" + query[0]\n    );\n\n    category = await category.data;\n    let locations = await axios.get(\"/api/admin/getLocations\");\n    locations = await locations.data;\n    let location = query[1];\n\n    return { categories, category, locations, location };\n  };\n  componentWillMount() {\n    this.setState({ currentCategory: this.props.category });\n    this.context.updateCatandLoc(this.props.categories, this.props.locations);\n    this.context.selectLocationInForm(this.props.location);\n  }\n  componentDidMount() {\n    this.setState({\n      categories: this.props.categories\n    });\n  }\n\n  clickCategory = id => {\n    this.state.categories.map(category => {\n      if (category._id === id) {\n        this.setState({\n          currentCategory: category\n        });\n\n        router.push(\n          \"/category?enquiry=\" + category.slug + \"-\" + this.props.location\n        );\n      }\n    });\n  };\n\n  render() {\n    const { categories, currentCategory } = this.state;\n    return (\n      <React.Fragment>\n        <Head title=\"Home\" />\n\n        <Layout\n          style={{\n            overflow: \"auto\",\n            height: \"100vh\",\n            left: 0\n          }}\n        >\n          <Sider\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n            onBreakpoint={broken => {\n              //   console.log(broken);\n            }}\n            onCollapse={(collapsed, type) => {\n              //   console.log(collapsed, type);\n            }}\n          >\n            <div style={{ textAlign: \"center\" }}>\n              <img src=\"../static/logo.png\" height=\"80px\" />\n            </div>\n\n            <Menu\n              theme=\"dark\"\n              mode=\"inline\"\n              defaultSelectedKeys={[currentCategory.order.toString()]}\n            >\n              {categories.map(category => (\n                <Menu.Item\n                  key={category.order}\n                  onClick={() => this.clickCategory(category._id)}\n                >\n                  <Row type=\"flex\" align=\"middle\">\n                    <Col span={1}>\n                      <i className=\"large material-icons\">{category.icon}</i>{\" \"}\n                    </Col>\n                    <Col span={1} offset={3}>\n                      <p className=\"nav-text\">{category.name}</p>\n                    </Col>\n                  </Row>\n                </Menu.Item>\n              ))}\n            </Menu>\n          </Sider>\n\n          <Content style={{ margin: \"24px 16px 0\" }}>\n            <div style={{ padding: 24, background: \"#fff\", minHeight: 360 }}>\n              {currentCategory.name === \"Artist\" ? <ArtistList /> : null}\n              <h1 style={{ textAlign: \"center\" }}>\n                {currentCategory.name} in {this.context.selectedLocation}\n              </h1>\n\n              <CategoryContent\n                modalCategory={currentCategory}\n                changeLocation={this.changeLocation}\n              />\n\n              {/* <Footer style={{ textAlign: \"center\" }}>\n                Ant Design Â©2018 Created by Ant UED\n              </Footer> */}\n            </div>\n          </Content>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Category);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAiCA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAGA;AACA;AACA;AACA;;;;;;AAxBA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAgkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AAvHA;AACA;AADA;AACA;AADA;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AASA;AATA;AAAA;AACA;AADA;AAUA;AAVA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAiHA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}